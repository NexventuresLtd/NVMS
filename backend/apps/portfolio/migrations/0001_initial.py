# Generated by Django 5.2.5 on 2025-08-30 08:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TechnologyTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color', models.CharField(default='#952301', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=220, unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(help_text='Brief description for cards/previews', max_length=300)),
                ('project_type', models.CharField(choices=[('web_app', 'Web Application'), ('mobile_app', 'Mobile Application'), ('desktop_app', 'Desktop Application'), ('api', 'API/Backend Service'), ('landing_page', 'Landing Page'), ('e_commerce', 'E-commerce'), ('dashboard', 'Dashboard/Admin Panel'), ('other', 'Other')], default='web_app', max_length=20)),
                ('client_name', models.CharField(blank=True, max_length=100, null=True)),
                ('project_url', models.URLField(blank=True, help_text='Live project URL', null=True)),
                ('repository_url', models.URLField(blank=True, help_text='GitHub/GitLab repository', null=True)),
                ('case_study_url', models.URLField(blank=True, help_text='Detailed case study link', null=True)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='portfolio/featured/')),
                ('gallery_images', models.JSONField(blank=True, default=list, help_text='List of image URLs for gallery')),
                ('tech_stack_frontend', models.CharField(blank=True, help_text='Frontend technologies', max_length=500)),
                ('tech_stack_backend', models.CharField(blank=True, help_text='Backend technologies', max_length=500)),
                ('tech_stack_database', models.CharField(blank=True, help_text='Database technologies', max_length=200)),
                ('tech_stack_deployment', models.CharField(blank=True, help_text='Deployment platform', max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('duration_months', models.PositiveIntegerField(blank=True, help_text='Project duration in months', null=True)),
                ('team_size', models.PositiveIntegerField(default=1)),
                ('budget_range', models.CharField(blank=True, help_text='e.g., $5K-10K, $10K+', max_length=50)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('is_featured', models.BooleanField(default=False, help_text='Show in featured projects')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order for display (0 = first)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('detailed_description', models.TextField(blank=True, help_text='Detailed project description with markdown support')),
                ('challenges_faced', models.TextField(blank=True, help_text='Technical challenges and solutions')),
                ('key_features', models.JSONField(blank=True, default=list, help_text='List of key features')),
                ('lessons_learned', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_projects', to=settings.AUTH_USER_MODEL)),
                ('technologies', models.ManyToManyField(blank=True, to='portfolio.technologytag')),
            ],
            options={
                'verbose_name': 'Portfolio Project',
                'verbose_name_plural': 'Portfolio Projects',
                'ordering': ['-is_featured', 'display_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectTestimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100)),
                ('client_position', models.CharField(blank=True, max_length=100)),
                ('client_company', models.CharField(blank=True, max_length=100)),
                ('client_image', models.ImageField(blank=True, null=True, upload_to='testimonials/')),
                ('testimonial_text', models.TextField()),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonials', to='portfolio.portfolio')),
            ],
            options={
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
    ]
